name: AI Task Orchestration

# Centralized timeout configuration
env:
  WORKFLOW_TIMEOUT_MINUTES: 30
  CLI_INSTALL_TIMEOUT_MINUTES: 5
  AI_EXECUTION_TIMEOUT_MINUTES: 10

# This workflow uses github.token for most operations and GH_PAT only for cross-workflow triggering
# Most operations (comments, labels, API calls) now use the default github.token
#
# Required permissions (declared below):
# - contents: write (for code modifications)
# - issues: write (for issue operations)
# - pull-requests: write (for PR creation)
#
# Note: GH_PAT is only used for checkout and PR creation operations that need to trigger other workflows
# GITHUB_TOKEN cannot trigger other workflows due to security restrictions, so GH_PAT is required for:
# - Creating PRs that should trigger other workflows (like AI review, quality checks)
# - Cross-workflow communication and orchestration
# If cross-workflow triggering is not needed, github.token is sufficient for all operations

"on":
  issues:
    types: [labeled]
  issue_comment:
    types: [created]

# Concurrency control to prevent parallel runs
concurrency:
  group: ai-workflows-feature-ai-task-${{ github.event.issue.number }}
  cancel-in-progress: false

# Minimal permissions for security
permissions:
  contents: write
  issues: write
  pull-requests: write
  actions: read

jobs:
  ai-task:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    if: contains(github.event.issue.labels.*.name, 'ai-task')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT }}
          fetch-depth: 0

      - name: Ensure required labels exist
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: ./scripts/setup-labels.sh

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Setup environment for OpenRouter API
        run: |
          # Validate required secrets
          if [[ -z "${{ secrets.OPENROUTER_API_KEY }}" ]]; then
            echo "ERROR: OPENROUTER_API_KEY secret is required"
            exit 1
          fi

          # Set default model if not specified
          echo "AI_MODEL=${{ vars.AI_MODEL || 'anthropic/claude-3.5-sonnet' }}" >> $GITHUB_ENV
          echo "✅ OpenRouter API key configured"
          echo "🚀 Using OpenRouter API"

      - name: Extract task details
        id: extract
        env:
          HAS_BUG_LABEL: ${{ contains(github.event.issue.labels.*.name, 'bug') }}
          HAS_REFACTORING_LABEL: ${{ contains(github.event.issue.labels.*.name, 'refactoring') }}
          HAS_DOCUMENTATION_LABEL: ${{ contains(github.event.issue.labels.*.name, 'documentation') }}
          HAS_TESTING_LABEL: ${{ contains(github.event.issue.labels.*.name, 'testing') }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
        run: |
          echo "issue_number=$ISSUE_NUMBER" >> $GITHUB_OUTPUT
          echo "issue_title=$ISSUE_TITLE" >> $GITHUB_OUTPUT
          ./scripts/determine-branch-prefix.sh

      - name: Create feature branch
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git checkout -b ${{ steps.extract.outputs.branch_prefix }}/ai-task-${{ steps.extract.outputs.issue_number }}

      - name: Execute AI task
        id: ai-task
        timeout-minutes: ${{ fromJSON(env.AI_EXECUTION_TIMEOUT_MINUTES) }}
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
          GITHUB_TOKEN: ${{ github.token }}
          AI_MODEL: ${{ env.AI_MODEL }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          echo "💰 COST WARNING: This AI task may incur API costs"
          echo "🔒 SECURITY: AI output will be sanitized to prevent data exposure"
          echo "⏰ TIMEOUT: Task limited to ${{ fromJSON(env.AI_EXECUTION_TIMEOUT_MINUTES) }} minutes"
          echo "🤖 AI MODEL: ${{ env.AI_MODEL }}"
          echo ""
          ./scripts/execute-ai-task.sh "${{ steps.extract.outputs.issue_number }}"

      - name: Commit changes
        if: steps.ai-task.outputs.has_changes == 'true'
        run: ./scripts/commit-changes.sh "${{ steps.extract.outputs.issue_title }}" "${{ steps.extract.outputs.issue_number }}"

      - name: Comment on issue when no changes made
        if: steps.ai-task.outputs.has_changes == 'false'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: ./scripts/comment-no-changes.sh "${{ steps.extract.outputs.issue_number }}"

      - name: Remove ai-task label when no changes made
        if: steps.ai-task.outputs.has_changes == 'false'
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          echo "Removing ai-task label from issue #${{ steps.extract.outputs.issue_number }} (no changes made)"
          gh issue edit "${{ steps.extract.outputs.issue_number }}" --remove-label "ai-task"
          gh issue edit "${{ steps.extract.outputs.issue_number }}" --add-label "ai-no-changes" 2>/dev/null || echo "Note: 'ai-no-changes' label not found"
          echo "✅ Updated labels for no-changes scenario"

      - name: Push changes
        id: push
        if: steps.ai-task.outputs.has_changes == 'true'
        run: ./scripts/push-changes.sh "${{ steps.extract.outputs.branch_prefix }}/ai-task-${{ steps.extract.outputs.issue_number }}"

      - name: Create Pull Request
        id: pr
        if: success() && steps.ai-task.outputs.has_changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
        run: ./scripts/create-pr.sh "${{ steps.push.outputs.branch_name }}" "${{ steps.extract.outputs.issue_title }}" "${{ steps.extract.outputs.issue_number }}"

      - name: Remove ai-task label after PR creation
        if: success() && steps.ai-task.outputs.has_changes == 'true' && steps.pr.outputs.pull_request_number != ''
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          echo "Removing ai-task label from issue #${{ steps.extract.outputs.issue_number }}"
          gh issue edit "${{ steps.extract.outputs.issue_number }}" --remove-label "ai-task"
          echo "✅ Successfully removed ai-task label"

      - name: Add ai-completed label
        if: success() && steps.ai-task.outputs.has_changes == 'true' && steps.pr.outputs.pull_request_number != ''
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          echo "Adding ai-completed label to issue #${{ steps.extract.outputs.issue_number }}"
          gh issue edit "${{ steps.extract.outputs.issue_number }}" --add-label "ai-completed" 2>/dev/null || \
            echo "Note: 'ai-completed' label not found, will be created automatically"
          echo "✅ Successfully added ai-completed label"

      - name: Comment on issue with PR link
        if: success() && steps.ai-task.outputs.has_changes == 'true' && steps.pr.outputs.pull_request_number != ''
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh issue comment "${{ steps.extract.outputs.issue_number }}" --body "🤖 **AI Task Completed!**

          I've successfully implemented the requested changes and created a pull request for review.

          **Pull Request:** ${{ steps.pr.outputs.pr_url }}

          ### What happens next?
          1. The PR is ready for your review
          2. Check the implementation and tests
          3. Merge when you're satisfied with the changes
          4. The issue will be automatically closed when the PR is merged

          The \`ai-task\` label has been removed and replaced with \`ai-completed\` to indicate the task is done."
